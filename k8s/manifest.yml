apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: fastapi-dep
  name: fastapi-dep
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fastapi-dep
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: fastapi-dep
    spec:
      containers:
      - image: takuyayone/fastapi-sample:1.0.0
        name: fastapi-dep
        ports:
        - containerPort: 8000
        resources:
          limits:
            cpu: "0.1"
          requests:
            cpu: "0.05"
        env:
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: K8S_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: K8S_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: K8S_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP

status: {}
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  creationTimestamp: null
  name: fastapi-dep
spec:
  maxReplicas: 10
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fastapi-dep
  targetCPUUtilizationPercentage: 50
  
---
apiVersion: v1
kind: Service
metadata:
  name: fastapi-svc
spec:
  ports:
    - port: 80
      targetPort: 8000
      protocol: TCP
  type: ClusterIP
  selector:
    app: fastapi-dep
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: fastapi-alb
#   annotations:
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     alb.ingress.kubernetes.io/target-type: ip
# spec:
#   ingressClassName: alb
#   rules:
#     - http:
#         paths:
#         - path: /
#           pathType: Prefix
#           backend:
#             service:
#               name: fastapi-svc
#               port:
#                 number: 80